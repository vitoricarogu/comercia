# 🚀 GUIA COMPLETO DE INSTALAÇÃO - SISTEMA DINÂMICA SAAS
# Data: 2025-01-15
# Versão: 2.0.0 - Sistema SaaS Multi-Tenant

## 📋 PRÉ-REQUISITOS

### 1. Software Necessário
- **Node.js 18+**: https://nodejs.org/
- **VSCode**: https://code.visualstudio.com/
- **Conta Supabase**: https://supabase.com/ (gratuita)

### 2. APIs Necessárias (Configurar depois)
- **Google Gemini API**: https://makersuite.google.com/app/apikey
- **WhatsApp Business API**: https://developers.facebook.com/docs/whatsapp

## 🛠️ PASSO A PASSO PARA INSTALAÇÃO

### PASSO 1: Instalar Dependências
```bash
# No terminal do VSCode:
npm install
```

### PASSO 2: Configurar Variáveis de Ambiente

#### A) Criar arquivo `.env` na RAIZ do projeto:
```env
VITE_API_URL=http://localhost:3001/api
VITE_SOCKET_URL=http://localhost:3001
```

#### B) Configurar arquivo `server/.env`:
**IMPORTANTE**: Substitua os valores entre `< >` pelas suas credenciais reais do Supabase

```env
# ===== CONFIGURAÇÃO SUPABASE (OBRIGATÓRIO) =====
SUPABASE_URL=<sua-url-do-supabase>
SUPABASE_ANON_KEY=<sua-anon-key-do-supabase>
SUPABASE_SERVICE_ROLE_KEY=<sua-service-role-key-do-supabase>

# ===== CONFIGURAÇÃO JWT (OBRIGATÓRIO) =====
JWT_SECRET=dinamica_saas_jwt_secret_2025_mude_isso_em_producao

# ===== CONFIGURAÇÃO DO SERVIDOR =====
PORT=3001
NODE_ENV=development
CORS_ORIGIN=http://localhost:5173

# ===== CONFIGURAÇÕES OPCIONAIS =====
# (Podem ser configuradas via interface do sistema depois)
OPENAI_API_KEY=
GOOGLE_GEMINI_API_KEY=
HUGGINGFACE_API_KEY=
WHATSAPP_ACCESS_TOKEN=
WHATSAPP_PHONE_NUMBER_ID=
```

**ONDE ENCONTRAR AS CREDENCIAIS SUPABASE:**
1. Acesse: https://supabase.com/dashboard
2. Selecione seu projeto
3. Vá em: Settings > API
4. Copie:
   - **Project URL** → `SUPABASE_URL`
   - **anon public** → `SUPABASE_ANON_KEY`
   - **service_role secret** → `SUPABASE_SERVICE_ROLE_KEY`

### PASSO 3: Configurar Banco de Dados Supabase

#### A) Executar Migração Principal:
1. Acesse: https://supabase.com/dashboard
2. Vá em: SQL Editor
3. Copie e execute o conteúdo do arquivo: `supabase/migrations/20250921234147_orange_canyon.sql`

#### B) Executar Migração Adicional:
1. No mesmo SQL Editor
2. Copie e execute o conteúdo do arquivo: `supabase/migrations/additional_tables.sql`

### PASSO 4: Iniciar o Sistema

#### Terminal 1 - Backend:
```bash
npm run server:dev
```
**Aguarde a mensagem**: `🚀 Sistema Dinâmica SaaS v2.0`

#### Terminal 2 - Frontend:
```bash
npm run dev
```
**Aguarde a mensagem**: `Local: http://localhost:5173`

### PASSO 5: Acessar o Sistema
- **Landing Page**: http://localhost:5173
- **Login**: http://localhost:5173/login
- **Testes**: http://localhost:5173/teste

## 🔑 CREDENCIAIS DE TESTE

### Usuários Pré-configurados:
- **Admin**: admin@dinamica.com / admin123
- **Supermercado**: super@dinamica.com / super123
- **Barbearia**: barber@dinamica.com / barber123

## ⚙️ CONFIGURAÇÕES ADICIONAIS (VIA INTERFACE)

### 1. Configurar API Gemini (OBRIGATÓRIO para IA funcionar)

#### Para Supermercado:
1. Login: super@dinamica.com / super123
2. Vá em: Dashboard > Configurações
3. Insira sua **API Key do Gemini**
4. Clique "Salvar"

#### Para Barbearia:
1. Login: barber@dinamica.com / barber123
2. Vá em: Dashboard > Configurações
3. Insira sua **API Key do Gemini**
4. Clique "Salvar"

**COMO OBTER API KEY GEMINI:**
1. Acesse: https://makersuite.google.com/app/apikey
2. Clique "Create API Key"
3. Copie a chave (começa com "AIza...")

### 2. Configurar WhatsApp Business (OPCIONAL)

#### Para qualquer usuário:
1. Faça login no sistema
2. Vá em: Dashboard > Configurações
3. Na seção WhatsApp, clique "+"
4. Preencha:
   - **Nome**: Nome da configuração (ex: "WhatsApp Principal")
   - **Access Token**: Token do WhatsApp Business API
   - **Phone Number ID**: ID do número do WhatsApp
5. Clique "Salvar" e depois "Testar"

**COMO OBTER CREDENCIAIS WHATSAPP:**
1. Acesse: https://developers.facebook.com/apps/
2. Crie um app WhatsApp Business
3. Configure webhook e obtenha credenciais

### 3. Configurar ERP (APENAS SUPERMERCADO)

#### Para Supermercado:
1. Login: super@dinamica.com / super123
2. Vá em: Dashboard > Configurar ERP
3. Preencha:
   - **Endpoint da API ERP**: URL da API do seu ERP
   - **Token de Acesso**: Token de autenticação
   - **Usuário ERP**: Usuário do sistema
   - **Senha ERP**: Senha do sistema
   - **Chave PIX**: Sua chave PIX
   - **Nome do Estabelecimento**: Nome para PIX
   - **Cidade**: Cidade do estabelecimento
4. Clique "Testar Conexão"
5. Se OK, clique "Salvar Configurações"

## 🧪 TESTAR O SISTEMA

### 1. Teste Automático:
- Acesse: http://localhost:5173/teste
- Clique "Executar Todos os Testes"
- Verifique se todos passam ✅

### 2. Teste Manual:

#### Supermercado:
1. Login: super@dinamica.com / super123
2. Crie um agente em "Agentes"
3. Configure WhatsApp e ERP
4. Teste o agente no chat

#### Barbearia:
1. Login: barber@dinamica.com / barber123
2. Crie um agente em "Agentes"
3. Configure WhatsApp
4. Teste agendamentos na "Agenda"

#### Admin:
1. Login: admin@dinamica.com / admin123
2. Gerencie usuários
3. Visualize métricas
4. Configure APIs globais

## 🔧 SOLUÇÃO DE PROBLEMAS

### Erro "Failed to fetch":
1. Verifique se o backend está rodando na porta 3001
2. Confirme as URLs no arquivo `.env`
3. Verifique CORS no `server/.env`

### Erro de Banco de Dados:
1. Confirme credenciais Supabase no `server/.env`
2. Execute as migrações SQL no Supabase
3. Verifique conexão na página de testes

### CSS não carrega:
1. Verifique se o Tailwind CDN está no `index.html`
2. Limpe cache do navegador (Ctrl+F5)

## 📁 ESTRUTURA DE ARQUIVOS IMPORTANTES

```
dinamica-saas/
├── .env                    # URLs do frontend
├── server/.env             # Configurações do backend
├── supabase/migrations/    # Scripts SQL do banco
├── src/pages/             # Páginas do sistema
├── server/routes/         # APIs do backend
└── uploads/               # Arquivos RAG (criado automaticamente)
```

## 🎯 PRÓXIMOS PASSOS

1. **Sistema Básico**: Funciona com credenciais de teste
2. **IA Completa**: Configure API Key Gemini
3. **WhatsApp**: Configure credenciais WhatsApp Business
4. **ERP**: Configure integração ERP (supermercado)

## 📞 SUPORTE

Se encontrar problemas:
1. Verifique logs no terminal
2. Acesse página de testes
3. Confirme se Supabase está configurado
4. Verifique se portas 3001 e 5173 estão livres

**SISTEMA PRONTO PARA USO! 🎉**

**TEMPO ESTIMADO DE CONFIGURAÇÃO: 15-30 minutos**